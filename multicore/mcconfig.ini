############ < flowshop, nq , test >
[problem]
problem = flowshop

############ for Flowshop start with "ta" !
############ 4,5,6,... for NQueens
[instance]
instance = ta20

############ initial upper bound
############ -2 (NEH), -1 (infty), 0 (best - from file)
[initial]
ub = -1

[bb]
singleNode = true

############ 0  [ don't sort sibling nodes]
############ 1  [ sort according to LB]
############ 2  [ sort according to LB + tiebreaker]
sortedDFS = 3

############ tiebreaker = 1 [lb], 2 [delta], 3 [idle]
sortingCriterion = 4

############ 0 [use only WEAK bound LB1]
############ 1 [use only STRONG bound LB2]
############ 2 [try LB1, refine with LB2]
boundingMode = 0

############ -1 [build schedule from left to right]
############ 1,2,3 [strategies for scheduling from both ends ]
adaptiveBranchingMode = 2 ; //3

############ for flowshop only
JohnsonMode = 0  ; [0] full, [1] m2=m, [2] m:m+1 [3] learn
earlyStopJohnson = false

############ activate if searching for ALL optimal (or satisfiable) optimal solutions
findAll = false ;

############ 'g' = GPU / 'c' = CPU
type = c

[verbose]
printSolutions = true  ;

[time]
checkpoint = 1800000
balance = 1

;number of threads used by multi-core workers
;a value <1 means that get_nprocs_conf() is used by default

[multicore]
threads = 2
worksteal = o




[gpu]
nbIVMs = 16384

[truncate]
truncSearch = false ;
truncDepth = 2;
cutoff_bottom = -1 ;
cutoff_top = 3;

[heuristic]
heuristic_threads = 1 ;
initial_heuristic_iters = 500 ;
heuristic_iters = 100 ;
treeHeuristicMaxTime = 60 ;
treeHeuristicMaxNodes = 1000000;
